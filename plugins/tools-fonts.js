let handler = async (m, { conn, text, usedPrefix, command }) => {
    if (!text) {
        return conn.sendMessage(m.chat, {
            text: `üé® *CONVERTIDOR DE FUENTES*\n\nüí° Uso: *${usedPrefix}${command}* <texto>\nüìå Ejemplo: *${usedPrefix}${command}* Hola Mundo`,
            footer: 'Selecciona una opci√≥n de los botones',
            buttons: [
                { buttonId: `${usedPrefix}font ejemplo`, buttonText: { displayText: 'üìù VER EJEMPLO' }, type: 1 },
                { buttonId: `${usedPrefix}font all Hola`, buttonText: { displayText: 'üé® TODAS LAS FUENTES' }, type: 1 },
                { buttonId: `${usedPrefix}font ayuda`, buttonText: { displayText: '‚ùì AYUDA' }, type: 1 }
            ],
            headerType: 1
        }, { quoted: m });
    }

    if (text.toLowerCase() === 'ejemplo') {
        return conn.sendMessage(m.chat, {
            text: `üìù *EJEMPLO DE FUENTES*\n\nTexto: "Hola"\n\nSelecciona un estilo para ver el ejemplo:`,
            footer: 'Luego usa con tu propio texto',
            buttons: [
                { buttonId: `${usedPrefix}font fancy1 Hola`, buttonText: { displayText: 'ü´ß BURBUJA' }, type: 1 },
                { buttonId: `${usedPrefix}font fancy3 Hola`, buttonText: { displayText: '‚ú® CURSIVA' }, type: 1 },
                { buttonId: `${usedPrefix}font fancy8 Hola`, buttonText: { displayText: 'üî≤ CUADRADOS' }, type: 1 }
            ],
            headerType: 1
        }, { quoted: m });
    }

    if (text.toLowerCase() === 'ayuda') {
        return conn.sendMessage(m.chat, {
            text: `‚ùì *AYUDA - CONVERTIDOR DE FUENTES*\n\n‚Ä¢ Usa *${usedPrefix}font <texto>* para ver todos los estilos\n‚Ä¢ Usa *${usedPrefix}font <tipo> <texto>* para un estilo espec√≠fico\n‚Ä¢ Ejemplo: *${usedPrefix}font fancy3 Hola Mundo*\n\nüìã *Tipos disponibles:* fancy1 hasta fancy10`,
            footer: 'Selecciona un ejemplo para probar',
            buttons: [
                { buttonId: `${usedPrefix}font fancy1 Hola`, buttonText: { displayText: 'ü´ß EJEMPLO 1' }, type: 1 },
                { buttonId: `${usedPrefix}font fancy3 Bot`, buttonText: { displayText: '‚ú® EJEMPLO 2' }, type: 1 }
            ],
            headerType: 1
        }, { quoted: m });
    }

    const args = text.split(' ');
    let fontType = 'all';
    let messageText = text;

    if (args[0].match(/^(fancy[1-9]|fancy10|all)$/)) {
        fontType = args[0];
        messageText = args.slice(1).join(' ');
        
        if (!messageText) {
            return conn.sendMessage(m.chat, {
                text: `‚ùå Debes proporcionar texto despu√©s del tipo de fuente.\nüí° Ejemplo: *${usedPrefix}${command}* fancy1 Hola Mundo`,
                footer: 'Prueba con un ejemplo',
                buttons: [
                    { buttonId: `${usedPrefix}font fancy1 Hola`, buttonText: { displayText: 'ü´ß EJEMPLO' }, type: 1 }
                ],
                headerType: 1
            }, { quoted: m });
        }
    }

    // Definir todas las fuentes (el mismo objeto de antes)
    const fonts = {
        fancy1: {
            name: "ü´ß Burbuja",
            convert: (text) => text.split('').map(char => {
                const fancyMap = {
                    'a': '·¥Ä', 'b': ' ô', 'c': '·¥Ñ', 'd': '·¥Ö', 'e': '·¥á', 'f': 'Íú∞', 'g': '…¢', 'h': ' ú', 'i': '…™',
                    'j': '·¥ä', 'k': '·¥ã', 'l': ' ü', 'm': '·¥ç', 'n': '…¥', 'o': '·¥è', 'p': '·¥ò', 'q': 'Q', 'r': ' Ä',
                    's': 'Íú±', 't': '·¥õ', 'u': '·¥ú', 'v': '·¥†', 'w': '·¥°', 'x': 'x', 'y': ' è', 'z': '·¥¢',
                    'A': '·¥Ä', 'B': ' ô', 'C': '·¥Ñ', 'D': '·¥Ö', 'E': '·¥á', 'F': 'Íú∞', 'G': '…¢', 'H': ' ú', 'I': '…™',
                    'J': '·¥ä', 'K': '·¥ã', 'L': ' ü', 'M': '·¥ç', 'N': '…¥', 'O': '·¥è', 'P': '·¥ò', 'Q': 'Q', 'R': ' Ä',
                    'S': 'Íú±', 'T': '·¥õ', 'U': '·¥ú', 'V': '·¥†', 'W': '·¥°', 'X': 'x', 'Y': ' è', 'Z': '·¥¢',
                    '0': '0', '1': '1', '2': '2', '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8', '9': '9',
                    ' ': ' '
                };
                return fancyMap[char] || char;
            }).join('')
        },

        fancy2: {
            name: "üî∑ Doble L√≠nea",
            convert: (text) => text.split('').map(char => {
                const fancyMap = {
                    'a': 'ùïí', 'b': 'ùïì', 'c': 'ùïî', 'd': 'ùïï', 'e': 'ùïñ', 'f': 'ùïó', 'g': 'ùïò', 'h': 'ùïô', 'i': 'ùïö',
                    'j': 'ùïõ', 'k': 'ùïú', 'l': 'ùïù', 'm': 'ùïû', 'n': 'ùïü', 'o': 'ùï†', 'p': 'ùï°', 'q': 'ùï¢', 'r': 'ùï£',
                    's': 'ùï§', 't': 'ùï•', 'u': 'ùï¶', 'v': 'ùïß', 'w': 'ùï®', 'x': 'ùï©', 'y': 'ùï™', 'z': 'ùï´',
                    'A': 'ùî∏', 'B': 'ùîπ', 'C': '‚ÑÇ', 'D': 'ùîª', 'E': 'ùîº', 'F': 'ùîΩ', 'G': 'ùîæ', 'H': '‚Ñç', 'I': 'ùïÄ',
                    'J': 'ùïÅ', 'K': 'ùïÇ', 'L': 'ùïÉ', 'M': 'ùïÑ', 'N': '‚Ñï', 'O': 'ùïÜ', 'P': '‚Ñô', 'Q': '‚Ñö', 'R': '‚Ñù',
                    'S': 'ùïä', 'T': 'ùïã', 'U': 'ùïå', 'V': 'ùïç', 'W': 'ùïé', 'X': 'ùïè', 'Y': 'ùïê', 'Z': '‚Ñ§',
                    '0': 'ùüò', '1': 'ùüô', '2': 'ùüö', '3': 'ùüõ', '4': 'ùüú', '5': 'ùüù', '6': 'ùüû', '7': 'ùüü', '8': 'ùü†', '9': 'ùü°',
                    ' ': ' '
                };
                return fancyMap[char] || char;
            }).join('')
        },

        fancy3: {
            name: "‚ú® Cursiva Elegante",
            convert: (text) => text.split('').map(char => {
                const fancyMap = {
                    'a': 'ùí∂', 'b': 'ùí∑', 'c': 'ùí∏', 'd': 'ùíπ', 'e': 'ùëí', 'f': 'ùíª', 'g': 'ùëî', 'h': 'ùíΩ', 'i': 'ùíæ',
                    'j': 'ùíø', 'k': 'ùìÄ', 'l': 'ùìÅ', 'm': 'ùìÇ', 'n': 'ùìÉ', 'o': 'ùëú', 'p': 'ùìÖ', 'q': 'ùìÜ', 'r': 'ùìá',
                    's': 'ùìà', 't': 'ùìâ', 'u': 'ùìä', 'v': 'ùìã', 'w': 'ùìå', 'x': 'ùìç', 'y': 'ùìé', 'z': 'ùìè',
                    'A': 'ùíú', 'B': 'ùêµ', 'C': 'ùíû', 'D': 'ùíü', 'E': 'ùê∏', 'F': 'ùêπ', 'G': 'ùí¢', 'H': 'ùêª', 'I': 'ùêº',
                    'J': 'ùí•', 'K': 'ùí¶', 'L': 'ùêø', 'M': 'ùëÄ', 'N': 'ùí©', 'O': 'ùí™', 'P': 'ùí´', 'Q': 'ùí¨', 'R': 'ùëÖ',
                    'S': 'ùíÆ', 'T': 'ùíØ', 'U': 'ùí∞', 'V': 'ùí±', 'W': 'ùí≤', 'X': 'ùí≥', 'Y': 'ùí¥', 'Z': 'ùíµ',
                    '0': '0', '1': '1', '2': '2', '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8', '9': '9',
                    ' ': ' '
                };
                return fancyMap[char] || char;
            }).join('')
        },

        fancy4: {
            name: "üñ§ G√≥tico",
            convert: (text) => text.split('').map(char => {
                const fancyMap = {
                    'a': 'ùîû', 'b': 'ùîü', 'c': 'ùî†', 'd': 'ùî°', 'e': 'ùî¢', 'f': 'ùî£', 'g': 'ùî§', 'h': 'ùî•', 'i': 'ùî¶',
                    'j': 'ùîß', 'k': 'ùî®', 'l': 'ùî©', 'm': 'ùî™', 'n': 'ùî´', 'o': 'ùî¨', 'p': 'ùî≠', 'q': 'ùîÆ', 'r': 'ùîØ',
                    's': 'ùî∞', 't': 'ùî±', 'u': 'ùî≤', 'v': 'ùî≥', 'w': 'ùî¥', 'x': 'ùîµ', 'y': 'ùî∂', 'z': 'ùî∑',
                    'A': 'ùîÑ', 'B': 'ùîÖ', 'C': '‚Ñ≠', 'D': 'ùîá', 'E': 'ùîà', 'F': 'ùîâ', 'G': 'ùîä', 'H': '‚Ñå', 'I': '‚Ñë',
                    'J': 'ùîç', 'K': 'ùîé', 'L': 'ùîè', 'M': 'ùîê', 'N': 'ùîë', 'O': 'ùîí', 'P': 'ùîì', 'Q': 'ùîî', 'R': '‚Ñú',
                    'S': 'ùîñ', 'T': 'ùîó', 'U': 'ùîò', 'V': 'ùîô', 'W': 'ùîö', 'X': 'ùîõ', 'Y': 'ùîú', 'Z': '‚Ñ®',
                    '0': '0', '1': '1', '2': '2', '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8', '9': '9',
                    ' ': ' '
                };
                return fancyMap[char] || char;
            }).join('')
        },

        fancy5: {
            name: "üî† Peque√±as May√∫sculas",
            convert: (text) => text.split('').map(char => {
                const fancyMap = {
                    'a': '·¥Ä', 'b': ' ô', 'c': '·¥Ñ', 'd': '·¥Ö', 'e': '·¥á', 'f': 'Íú∞', 'g': '…¢', 'h': ' ú', 'i': '…™',
                    'j': '·¥ä', 'k': '·¥ã', 'l': ' ü', 'm': '·¥ç', 'n': '…¥', 'o': '·¥è', 'p': '·¥ò', 'q': '«´', 'r': ' Ä',
                    's': 'Íú±', 't': '·¥õ', 'u': '·¥ú', 'v': '·¥†', 'w': '·¥°', 'x': 'x', 'y': ' è', 'z': '·¥¢',
                    'A': '·¥Ä', 'B': ' ô', 'C': '·¥Ñ', 'D': '·¥Ö', 'E': '·¥á', 'F': 'Íú∞', 'G': '…¢', 'H': ' ú', 'I': '…™',
                    'J': '·¥ä', 'K': '·¥ã', 'L': ' ü', 'M': '·¥ç', 'N': '…¥', 'O': '·¥è', 'P': '·¥ò', 'Q': '«´', 'R': ' Ä',
                    'S': 'Íú±', 'T': '·¥õ', 'U': '·¥ú', 'V': '·¥†', 'W': '·¥°', 'X': 'x', 'Y': ' è', 'Z': '·¥¢',
                    '0': '0', '1': '1', '2': '2', '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8', '9': '9',
                    ' ': ' '
                };
                return fancyMap[char] || char;
            }).join('')
        },

        fancy6: {
            name: "‚ö° S√≠mbolos",
            convert: (text) => text.split('').map(char => {
                const fancyMap = {
                    'a': 'Œ±', 'b': '–≤', 'c': '¬¢', 'd': '‚àÇ', 'e': '—î', 'f': '∆í', 'g': 'g', 'h': '–Ω', 'i': 'Œπ',
                    'j': '◊†', 'k': '–∫', 'l': '‚Ñì', 'm': '–º', 'n': 'Œ∑', 'o': 'œÉ', 'p': 'œÅ', 'q': 'q', 'r': '—è',
                    's': '—ï', 't': '—Ç', 'u': 'œÖ', 'v': 'ŒΩ', 'w': 'œâ', 'x': 'œá', 'y': '—É', 'z': 'z',
                    'A': 'A', 'B': 'B', 'C': 'C', 'D': 'D', 'E': 'E', 'F': 'F', 'G': 'G', 'H': 'H', 'I': 'I',
                    'J': 'J', 'K': 'K', 'L': 'L', 'M': 'M', 'N': 'N', 'O': 'O', 'P': 'P', 'Q': 'Q', 'R': 'R',
                    'S': 'S', 'T': 'T', 'U': 'U', 'V': 'V', 'W': 'W', 'X': 'X', 'Y': 'Y', 'Z': 'Z',
                    '0': '0', '1': '1', '2': '2', '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8', '9': '9',
                    ' ': ' '
                };
                return fancyMap[char] || char;
            }).join('')
        },

        fancy7: {
            name: "üîÑ Invertido",
            convert: (text) => text.split('').map(char => {
                const fancyMap = {
                    'a': '…ê', 'b': 'q', 'c': '…î', 'd': 'p', 'e': '«ù', 'f': '…ü', 'g': '∆É', 'h': '…•', 'i': '·¥â',
                    'j': '…æ', 'k': ' û', 'l': 'l', 'm': '…Ø', 'n': 'u', 'o': 'o', 'p': 'd', 'q': 'b', 'r': '…π',
                    's': 's', 't': ' á', 'u': 'n', 'v': ' å', 'w': ' ç', 'x': 'x', 'y': ' é', 'z': 'z',
                    'A': '‚àÄ', 'B': 'B', 'C': '∆Ü', 'D': 'D', 'E': '∆é', 'F': '‚Ñ≤', 'G': '◊§', 'H': 'H', 'I': 'I',
                    'J': '≈ø', 'K': ' û', 'L': 'À•', 'M': 'W', 'N': 'N', 'O': 'O', 'P': '‘Ä', 'Q': 'Q', 'R': '…π',
                    'S': 'S', 'T': '‚î¥', 'U': '‚à©', 'V': 'Œõ', 'W': 'M', 'X': 'X', 'Y': '‚ÖÑ', 'Z': 'Z',
                    '0': '0', '1': '∆ñ', '2': '·ÑÖ', '3': '∆ê', '4': '„Ñ£', '5': 'œõ', '6': '9', '7': '„Ñ•', '8': '8', '9': '6',
                    ' ': ' '
                };
                return fancyMap[char] || char;
            }).join('')
        },

        fancy8: {
            name: "üî≤ Cuadrados",
            convert: (text) => text.split('').map(char => {
                const fancyMap = {
                    'a': 'üÑ∞', 'b': 'üÑ±', 'c': 'üÑ≤', 'd': 'üÑ≥', 'e': 'üÑ¥', 'f': 'üÑµ', 'g': 'üÑ∂', 'h': 'üÑ∑', 'i': 'üÑ∏',
                    'j': 'üÑπ', 'k': 'üÑ∫', 'l': 'üÑª', 'm': 'üÑº', 'n': 'üÑΩ', 'o': 'üÑæ', 'p': 'üÑø', 'q': 'üÖÄ', 'r': 'üÖÅ',
                    's': 'üÖÇ', 't': 'üÖÉ', 'u': 'üÖÑ', 'v': 'üÖÖ', 'w': 'üÖÜ', 'x': 'üÖá', 'y': 'üÖà', 'z': 'üÖâ',
                    'A': 'üÑ∞', 'B': 'üÑ±', 'C': 'üÑ≤', 'D': 'üÑ≥', 'E': 'üÑ¥', 'F': 'üÑµ', 'G': 'üÑ∂', 'H': 'üÑ∑', 'I': 'üÑ∏',
                    'J': 'üÑπ', 'K': 'üÑ∫', 'L': 'üÑª', 'M': 'üÑº', 'N': 'üÑΩ', 'O': 'üÑæ', 'P': 'üÑø', 'Q': 'üÖÄ', 'R': 'üÖÅ',
                    'S': 'üÖÇ', 'T': 'üÖÉ', 'U': 'üÖÑ', 'V': 'üÖÖ', 'W': 'üÖÜ', 'X': 'üÖá', 'Y': 'üÖà', 'Z': 'üÖâ',
                    '0': '0', '1': '1', '2': '2', '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8', '9': '9',
                    ' ': ' '
                };
                return fancyMap[char] || char;
            }).join('')
        },

        fancy9: {
            name: "‚≠ï C√≠rculos",
            convert: (text) => text.split('').map(char => {
                const fancyMap = {
                    'a': '‚ìê', 'b': '‚ìë', 'c': '‚ìí', 'd': '‚ìì', 'e': '‚ìî', 'f': '‚ìï', 'g': '‚ìñ', 'h': '‚ìó', 'i': '‚ìò',
                    'j': '‚ìô', 'k': '‚ìö', 'l': '‚ìõ', 'm': '‚ìú', 'n': '‚ìù', 'o': '‚ìû', 'p': '‚ìü', 'q': '‚ì†', 'r': '‚ì°',
                    's': '‚ì¢', 't': '‚ì£', 'u': '‚ì§', 'v': '‚ì•', 'w': '‚ì¶', 'x': '‚ìß', 'y': '‚ì®', 'z': '‚ì©',
                    'A': '‚í∂', 'B': '‚í∑', 'C': '‚í∏', 'D': '‚íπ', 'E': '‚í∫', 'F': '‚íª', 'G': '‚íº', 'H': '‚íΩ', 'I': '‚íæ',
                    'J': '‚íø', 'K': '‚ìÄ', 'L': '‚ìÅ', 'M': '‚ìÇ', 'N': '‚ìÉ', 'O': '‚ìÑ', 'P': '‚ìÖ', 'Q': '‚ìÜ', 'R': '‚ìá',
                    'S': '‚ìà', 'T': '‚ìâ', 'U': '‚ìä', 'V': '‚ìã', 'W': '‚ìå', 'X': '‚ìç', 'Y': '‚ìé', 'Z': '‚ìè',
                    '0': '‚ì™', '1': '‚ë†', '2': '‚ë°', '3': '‚ë¢', '4': '‚ë£', '5': '‚ë§', '6': '‚ë•', '7': '‚ë¶', '8': '‚ëß', '9': '‚ë®',
                    ' ': ' '
                };
                return fancyMap[char] || char;
            }).join('')
        },

        fancy10: {
            name: "üíß Gotas",
            convert: (text) => text.split('').map(char => {
                const fancyMap = {
                    'a': '√§', 'b': '·∏Ö', 'c': '√ß', 'd': '·∏ç', 'e': '√´', 'f': '∆í', 'g': 'ƒ°', 'h': '·∏•', 'i': '√Ø',
                    'j': 'j', 'k': '·∏≥', 'l': '·∏∑', 'm': '·πÉ', 'n': '·πá', 'o': '√∂', 'p': '·πó', 'q': 'q', 'r': '·πõ',
                    's': '≈°', 't': '·π≠', 'u': '√º', 'v': 'v', 'w': '·∫â', 'x': 'x', 'y': '√ø', 'z': '·∫ì',
                    'A': '√Ñ', 'B': '·∏Ñ', 'C': '√á', 'D': '·∏å', 'E': '√ã', 'F': '∆ë', 'G': 'ƒ†', 'H': '·∏§', 'I': '√è',
                    'J': 'J', 'K': '·∏≤', 'L': '·∏∂', 'M': '·πÇ', 'N': '·πÜ', 'O': '√ñ', 'P': '·πñ', 'Q': 'Q', 'R': '·πö',
                    'S': '≈†', 'T': '·π¨', 'U': '√ú', 'V': 'V', 'W': '·∫à', 'X': 'X', 'Y': '≈∏', 'Z': '·∫í',
                    '0': '0', '1': '1', '2': '2', '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8', '9': '9',
                    ' ': ' '
                };
                return fancyMap[char] || char;
            }).join('')
        }
    };

    // Procesar seg√∫n el tipo solicitado
    if (fontType === 'all') {
        let result = `üé® *TODAS LAS FUENTES PARA:* "${messageText}"\n\n`;
        
        Object.entries(fonts).forEach(([key, font]) => {
            result += `*${font.name}:*\n\`\`\`${font.convert(messageText)}\`\`\`\n`;
        });

        return conn.sendMessage(m.chat, {
            text: result,
            footer: 'Selecciona "üìã COPIAR" para instrucciones de copiado',
            buttons: [
                { buttonId: `${usedPrefix}copiar ${fonts.fancy1.convert(messageText)}`, buttonText: { displayText: 'üìã COPIAR BURBUJA' }, type: 1 },
                { buttonId: `${usedPrefix}copiar ${fonts.fancy3.convert(messageText)}`, buttonText: { displayText: 'üìã COPIAR CURSIVA' }, type: 1 },
                { buttonId: `${usedPrefix}font ayuda`, buttonText: { displayText: '‚ùì AYUDA' }, type: 1 }
            ],
            headerType: 1
        }, { quoted: m });
        
    } else if (fonts[fontType]) {
        const convertedText = fonts[fontType].convert(messageText);
        
        return conn.sendMessage(m.chat, {
            text: `üé® *${fonts[fontType].name}*\n\n*Texto original:* ${messageText}\n*Texto convertido:*\n\`\`\`${convertedText}\`\`\`\n\nüí° Tipo: ${fontType}`,
            footer: 'Selecciona "üìã COPIAR" para instrucciones',
            buttons: [
                { buttonId: `${usedPrefix}copiar ${convertedText}`, buttonText: { displayText: 'üìã COPIAR TEXTO' }, type: 1 },
                { buttonId: `${usedPrefix}font all ${messageText}`, buttonText: { displayText: 'üé® TODOS LOS ESTILOS' }, type: 1 },
                { buttonId: `${usedPrefix}font ejemplo`, buttonText: { displayText: 'üìù M√ÅS EJEMPLOS' }, type: 1 }
            ],
            headerType: 1
        }, { quoted: m });
        
    } else {
        return conn.sendMessage(m.chat, {
            text: `‚ùå Tipo de fuente no v√°lido.\nüí° Tipos disponibles: fancy1, fancy2, ..., fancy10, all`,
            footer: 'Selecciona un tipo v√°lido',
            buttons: [
                { buttonId: `${usedPrefix}font fancy1 Hola`, buttonText: { displayText: 'ü´ß fancy1' }, type: 1 },
                { buttonId: `${usedPrefix}font fancy3 Hola`, buttonText: { displayText: '‚ú® fancy3' }, type: 1 },
                { buttonId: `${usedPrefix}font ayuda`, buttonText: { displayText: '‚ùì AYUDA' }, type: 1 }
            ],
            headerType: 1
        }, { quoted: m });
    }
};

// Handler para el comando de copiar (CORREGIDO)
handler.copiar = async (m, { conn, text }) => {
    if (!text) {
        return conn.sendMessage(m.chat, {
            text: `‚ùå No hay texto para copiar.\nüí° Usa el comando con texto: ${usedPrefix}copiar <texto>`
        }, { quoted: m });
    }
    
    await conn.sendMessage(m.chat, {
        text: `üìã *INSTRUCCIONES PARA COPIAR:*\n\n1. ‚≠ê *Mant√©n presionado* el texto de abajo\n2. üìã Selecciona *"Copiar"*\n3. üéØ ¬°Listo! Puedes pegarlo donde quieras\n\n*Texto a copiar:*\n\`\`\`${text}\`\`\`\n\nüí° El texto est√° en formato para f√°cil copia`,
        footer: "Copia manualmente el texto de arriba"
    }, { quoted: m });
};

handler.help = ['font', 'fuente', 'fonts', 'copiar'];
handler.tags = ['tools'];
handler.command = /^(font|fuente|fonts|copiar)$/i;
handler.register = true;

export default handler;
